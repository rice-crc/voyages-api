---
version: "3.7"

services:
  voyages-mysql:
    image: "mysql:8.0.33-oracle"
    cap_add:
      - "SYS_NICE"
    container_name: "voyages-mysql"
    hostname: "voyages-mysql"
    restart: "on-failure"
    ports:
      - "127.0.0.1:3306:3306"
    networks:
      - "voyages"
    volumes:
      - "mysql_volume:/var/lib/mysql"
      - "./data:/docker-entrypoint-initdb.d"
    command: "--slow-query-log=ON --long-query-time=3 --slow-query-log-file=/tmp/slow.log"
    environment:
      MYSQL_DATABASE: "voyages_api"
      MYSQL_ROOT_PASSWORD: "voyages"
      MYSQL_USER: "voyages"
      MYSQL_PASSWORD: "voyages"

  voyages-solr:
    image: "solr:8.5.2"
    container_name: "voyages-solr"
    hostname: "voyages-solr"
    restart: "on-failure"
    ports:
      - "127.0.0.1:8983:8983"
    networks:
      - "voyages"
    volumes:
      - "solr_volume:/var/solr"
      - "./src/solr:/srv/voyages/solr"
    environment:
      SOLR_JAVA_MEM: "-Xms1g -Xmx1g"

  voyages-redis:
    image: "redis:3.2.12-alpine"
    container_name: "voyages-redis"
    hostname: "voyages-redis"
    restart: "on-failure"
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - "voyages"
    volumes:
      - "redis_volume:/data"

  voyages-api:
    image: "voyages-api"
    container_name: "voyages-api"
    hostname: "voyages-api"
    restart: "on-failure"
    networks:
      - "voyages"
    depends_on:
      - "voyages-mysql"
      - "voyages-redis"
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - "./src/api:/srv/voyages-api"
      - "${STATIC_SOURCE_DIR:-./src/api/static}:/srv/voyages-api/static"
    build:
      context: "./src/api"
      dockerfile: "../../docker/api/Dockerfile"

  voyages-stats:
    image: "voyages-stats"
    container_name: "voyages-stats"
    hostname: "voyages-stats"
    restart: "on-failure"
    networks:
      - "voyages"
    depends_on:
      - "voyages-api"
    ports:
      - "127.0.0.1:5000:5000"
    volumes:
      - "./src/stats:/srv/voyages-stats"
    build:
      context: "./src/stats"
      dockerfile: "../../docker/stats/Dockerfile"

  voyages-people-networks:
    image: "voyages-people-networks"
    container_name: "voyages-people-networks"
    hostname: "voyages-people-networks"
    restart: "on-failure"
    networks:
      - "voyages"
    depends_on:
      - "voyages-api"
    ports:
      - "127.0.0.1:5006:5006"
    volumes:
      - "./src/people-networks:/srv/voyages-people-networks"
    build:
      context: "./src/people-networks"
      dockerfile: "../../docker/people-networks/Dockerfile"

  voyages-geo-networks:
    image: "voyages-geo-networks"
    container_name: "voyages-geo-networks"
    hostname: "voyages-geo-networks"
    restart: "on-failure"
    networks:
      - "voyages"
    depends_on:
      - "voyages-api"
    ports:
      - "127.0.0.1:5005:5005"
    volumes:
      - "./src/geo-networks:/srv/voyages-geo-networks"
    build:
      context: "./src/geo-networks"
      dockerfile: "../../docker/geo-networks/Dockerfile"

  voyages-adminer:
    image: "adminer:latest"
    container_name: "voyages-adminer"
    hostname: "voyages-adminer"
    restart: "on-failure"
    depends_on:
      - "voyages-mysql"
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - "voyages"
    environment:
      ADMINER_DEFAULT_SERVER: "voyages-mysql"

networks:
    voyages:
        driver: "bridge"
        ipam:
          driver: "default"
          config:
            - subnet: "172.20.0.0/16"

volumes:
  mysql_volume: {}
  solr_volume: {}
  redis_volume: {}
